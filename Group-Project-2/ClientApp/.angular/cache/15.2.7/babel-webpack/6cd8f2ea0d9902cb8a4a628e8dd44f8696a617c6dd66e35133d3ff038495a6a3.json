{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ReservationDetailsComponent = class ReservationDetailsComponent {\n  constructor(_router, _reservationService, _houseService, activatedRoute) {\n    this._router = _router;\n    this._reservationService = _reservationService;\n    this._houseService = _houseService;\n    this.activatedRoute = activatedRoute;\n    this.viewTitle = 'Details';\n    activatedRoute.params.subscribe(params => {\n      if (params.id) this.loadReservation(+params['id']);\n    });\n  }\n  deleteReservation(reservation) {\n    const confirmDelete = confirm(`Are you sure you want to delete \"${reservation.House?.Title}\"?`);\n    if (confirmDelete) {\n      this._reservationService.deleteReservation(reservation.ReservationId).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n        }\n      }, error => {\n        console.error('Error deleting reservation:', error);\n      });\n    }\n  }\n  loadReservation(reservationId) {\n    this._reservationService.getReservationById(reservationId).subscribe(reservation => {\n      console.log('retrieved reservation: ', reservation);\n      this.reservation = reservation;\n    }, error => {\n      console.error('Error loading reservation for details view:', error);\n    });\n  }\n  setHouseForReservations() {\n    this._houseService.getHouseById(this.reservation.HouseId).subscribe(house => {\n      console.log('Retrieved house:', house);\n      this.reservation.House = house;\n      console.log('Reservation after setting House:', this.reservation);\n    });\n  }\n  backToReservations() {\n    this._router.navigate(['/reservations']);\n  }\n  ngOnInit() {}\n};\nReservationDetailsComponent = __decorate([Component({\n  selector: 'app-reservation-details-component',\n  templateUrl: './reservation-details.component.html',\n  styleUrls: ['./reservation-details.component.css']\n})], ReservationDetailsComponent);\nexport { ReservationDetailsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,IAAMC,2BAA2B,GAAjC,MAAMA,2BAA2B;EAItCC,YACUC,OAAe,EACfC,mBAAuC,EACvCC,aAA2B,EAC3BC,cAA8B;IAH9B,YAAO,GAAPH,OAAO;IACP,wBAAmB,GAAnBC,mBAAmB;IACnB,kBAAa,GAAbC,aAAa;IACb,mBAAc,GAAdC,cAAc;IAPxB,cAAS,GAAW,SAAS;IAQ3BA,cAAc,CAACC,MAAM,CAACC,SAAS,CAAED,MAAM,IAAI;MACzC,IAAIA,MAAM,CAACE,EAAE,EACX,IAAI,CAACC,eAAe,CAAC,CAACH,MAAM,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC,CAAC;EACJ;EAEAI,iBAAiB,CAACC,WAAyB;IACzC,MAAMC,aAAa,GAAGC,OAAO,CAAC,oCAAoCF,WAAW,CAACG,KAAK,EAAEC,KAAK,IAAI,CAAC;IAC/F,IAAIH,aAAa,EAAE;MACjB,IAAI,CAACT,mBAAmB,CAACO,iBAAiB,CAACC,WAAW,CAACK,aAAa,CAAC,CAClET,SAAS,CACPU,QAAQ,IAAI;QACX,IAAIA,QAAQ,CAACC,OAAO,EAAE;UACpBC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,OAAO,CAAC;;MAEjC,CAAC,EACAC,KAAK,IAAI;QACRH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD,CAAC,CAAC;;EAEV;EAEAb,eAAe,CAACc,aAAqB;IACnC,IAAI,CAACpB,mBAAmB,CAACqB,kBAAkB,CAACD,aAAa,CAAC,CACvDhB,SAAS,CACPI,WAAgB,IAAI;MACnBQ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAET,WAAW,CAAC;MACnD,IAAI,CAACA,WAAW,GAAGA,WAAW;IAChC,CAAC,EAAGW,KAAU,IAAI;MAChBH,OAAO,CAACG,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;IACrE,CAAC,CACF;EACL;EAEAG,uBAAuB;IACrB,IAAI,CAACrB,aAAa,CAACsB,YAAY,CAAC,IAAI,CAACf,WAAW,CAACgB,OAAO,CAAC,CAACpB,SAAS,CAACqB,KAAK,IAAG;MAC1ET,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEQ,KAAK,CAAC;MACtC,IAAI,CAACjB,WAAW,CAACG,KAAK,GAAGc,KAAK;MAC9BT,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE,IAAI,CAACT,WAAW,CAAC;IACnE,CAAC,CAAC;EACJ;EAEAkB,kBAAkB;IAChB,IAAI,CAAC3B,OAAO,CAAC4B,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;EAC1C;EAEAC,QAAQ,IAER;CACD;AA1DY/B,2BAA2B,eANvCD,SAAS,CAAC;EACTiC,QAAQ,EAAE,mCAAmC;EAC7CC,WAAW,EAAE,sCAAsC;EACnDC,SAAS,EAAE,CAAC,qCAAqC;CAClD,CAAC,GAEWlC,2BAA2B,CA0DvC;SA1DYA,2BAA2B","names":["Component","ReservationDetailsComponent","constructor","_router","_reservationService","_houseService","activatedRoute","params","subscribe","id","loadReservation","deleteReservation","reservation","confirmDelete","confirm","House","Title","ReservationId","response","success","console","log","message","error","reservationId","getReservationById","setHouseForReservations","getHouseById","HouseId","house","backToReservations","navigate","ngOnInit","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/teresapham/Projects/Group-Project-2/Group-Project-2/ClientApp/src/app/reservation-details/reservation-details.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ReservationService } from '../reservations/reservations.service';\nimport { IReservation } from '../reservations/reservation';\nimport { HouseService } from '../houses/houses.service';\n\n@Component({\n  selector: 'app-reservation-details-component',\n  templateUrl: './reservation-details.component.html',\n  styleUrls: ['./reservation-details.component.css']\n})\n\nexport class ReservationDetailsComponent implements OnInit {\n  viewTitle: string = 'Details';\n  reservation!: IReservation;\n\n  constructor(\n    private _router: Router,\n    private _reservationService: ReservationService,\n    private _houseService: HouseService,\n    private activatedRoute: ActivatedRoute) {\n    activatedRoute.params.subscribe((params) => {\n      if (params.id)\n        this.loadReservation(+params['id'])\n    })\n  }\n\n  deleteReservation(reservation: IReservation): void {\n    const confirmDelete = confirm(`Are you sure you want to delete \"${reservation.House?.Title}\"?`);\n    if (confirmDelete) {\n      this._reservationService.deleteReservation(reservation.ReservationId)\n        .subscribe(\n          (response) => {\n            if (response.success) {\n              console.log(response.message);\n            }\n          },\n          (error) => {\n            console.error('Error deleting reservation:', error);\n          });\n    }\n  }\n\n  loadReservation(reservationId: number) {\n    this._reservationService.getReservationById(reservationId)\n      .subscribe(\n        (reservation: any) => {\n          console.log('retrieved reservation: ', reservation);\n          this.reservation = reservation;\n        }, (error: any) => {\n          console.error('Error loading reservation for details view:', error);\n        }\n      );\n  }\n\n  setHouseForReservations() {\n    this._houseService.getHouseById(this.reservation.HouseId).subscribe(house => {\n      console.log('Retrieved house:', house);\n      this.reservation.House = house;\n      console.log('Reservation after setting House:', this.reservation);\n    });\n  }\n\n  backToReservations() {\n    this._router.navigate(['/reservations']);\n  }\n\n  ngOnInit(): void {\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}