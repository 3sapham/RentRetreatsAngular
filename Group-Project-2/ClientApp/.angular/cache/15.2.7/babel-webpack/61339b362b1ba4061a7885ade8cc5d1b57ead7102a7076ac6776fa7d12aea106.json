{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./houses.service\";\nexport class HouseformComponent {\n  constructor(_formbuilder, _router, _route, _houseService) {\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._route = _route;\n    this._houseService = _houseService;\n    this.isEditMode = false;\n    this.houseId = -1;\n    this.houseForm = _formbuilder.group({\n      title: ['', Validators.required],\n      location: [''],\n      pricePerNight: [0, Validators.required],\n      bedrooms: [0, Validators.required],\n      bathrooms: [0, Validators.required],\n      description: [''],\n      houseImageUrl: [''],\n      bedroomImageUrl: [''],\n      bathroomImageUrl: ['']\n    });\n  }\n  onSubmit() {\n    console.log(\"HouseCreate form submitted:\");\n    console.log(this.houseForm);\n    const newHouse = this.houseForm.value;\n    if (this.isEditMode) {\n      this._houseService.updateHouse(this.houseId, newHouse).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/houses']);\n        } else {\n          console.log('House update failed');\n        }\n      });\n    } else {\n      this._houseService.createHouse(newHouse).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/houses']);\n        } else {\n          console.log('House creation failed');\n        }\n      });\n    }\n  }\n  backToHouses() {\n    this._router.navigate(['/houses']);\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false; // Create mode\n      } else if (params['mode'] === 'edit') {\n        this.isEditMode = true; // Edit mode\n        this.houseId = +params['id']; // Convert to number\n        this.loadHouseForEdit(this.houseId);\n      }\n    });\n  }\n  loadHouseForEdit(houseId) {\n    this._houseService.getHouseById(houseId).subscribe(house => {\n      console.log('retrieved house: ', house);\n      this.houseForm.patchValue({\n        title: house.Title,\n        location: house.Location,\n        pricePerNight: house.PricePerNight,\n        bedrooms: house.Bedrooms,\n        bathrooms: house.Bathrooms,\n        description: house.Description,\n        houseImageUrl: house.HouseImageUrl,\n        bedroomImageUrl: house.BedroomImageUrl,\n        bathroomImageUrl: house.BathroomImageUrl\n      });\n    }, error => {\n      console.error('Error loading house for edit:', error);\n    });\n  }\n}\nHouseformComponent.ɵfac = function HouseformComponent_Factory(t) {\n  return new (t || HouseformComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.HouseService));\n};\nHouseformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HouseformComponent,\n  selectors: [[\"app-houseform-component\"]],\n  decls: 43,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\", 1, \"form-control\"], [\"for\", \"location\"], [\"type\", \"text\", \"id\", \"location\", \"formControlName\", \"location\", 1, \"form-control\"], [\"for\", \"pricePerNight\"], [\"type\", \"number\", \"id\", \"pricePerNight\", \"formControlName\", \"pricePerNight\", 1, \"form-control\"], [\"for\", \"bedrooms\"], [\"type\", \"number\", \"id\", \"bedrooms\", \"formControlName\", \"bedrooms\", 1, \"form-control\"], [\"for\", \"bathrooms\"], [\"type\", \"number\", \"id\", \"bathrooms\", \"formControlName\", \"bathrooms\", 1, \"form-control\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"houseImageUrl\"], [\"type\", \"text\", \"id\", \"houseImageUrl\", \"formControlName\", \"houseImageUrl\", 1, \"form-control\"], [\"for\", \"bedroomImageUrl\"], [\"type\", \"text\", \"id\", \"bedroomImageUrl\", \"formControlName\", \"bedroomImageUrl\", 1, \"form-control\"], [\"for\", \"bathroomImageUrl\"], [\"type\", \"text\", \"id\", \"bathroomImageUrl\", \"formControlName\", \"bathroomImageUrl\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"]],\n  template: function HouseformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function HouseformComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Title:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Location:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Price per night:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 8);\n      i0.ɵɵtext(17, \"Bedrooms:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 1)(20, \"label\", 10);\n      i0.ɵɵtext(21, \"Bathrooms:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 1)(24, \"label\", 12);\n      i0.ɵɵtext(25, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"textarea\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 1)(28, \"label\", 14);\n      i0.ɵɵtext(29, \"House Image URL:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 1)(32, \"label\", 16);\n      i0.ɵɵtext(33, \"Bedroom Image URL:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(34, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 1)(36, \"label\", 18);\n      i0.ɵɵtext(37, \"Bathroom Image URL:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(38, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"button\", 20);\n      i0.ɵɵtext(40);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function HouseformComponent_Template_button_click_41_listener() {\n        return ctx.backToHouses();\n      });\n      i0.ɵɵtext(42, \"Cancel\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Create\", \" House\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.houseForm);\n      i0.ɵɵadvance(37);\n      i0.ɵɵproperty(\"disabled\", ctx.houseForm.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Update\" : \"Create\", \" House \");\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","HouseformComponent","constructor","_formbuilder","_router","_route","_houseService","houseForm","group","title","required","location","pricePerNight","bedrooms","bathrooms","description","houseImageUrl","bedroomImageUrl","bathroomImageUrl","onSubmit","console","log","newHouse","value","isEditMode","updateHouse","houseId","subscribe","response","success","message","navigate","createHouse","backToHouses","ngOnInit","params","loadHouseForEdit","getHouseById","house","patchValue","Title","Location","PricePerNight","Bedrooms","Bathrooms","Description","HouseImageUrl","BedroomImageUrl","BathroomImageUrl","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/teresapham/Projects/Group-Project-2/Group-Project-2/ClientApp/src/app/houses/houseform.component.ts","/Users/teresapham/Projects/Group-Project-2/Group-Project-2/ClientApp/src/app/houses/houseform.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HouseService } from './houses.service';\n\n@Component({\n  selector: \"app-houseform-component\",\n  templateUrl: \"./houseform.component.html\"\n})\nexport class HouseformComponent {\n  houseForm: FormGroup;\n  isEditMode: boolean = false;\n  houseId: number = -1;\n\n  constructor(\n    private _formbuilder: FormBuilder,\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _houseService: HouseService\n  ) {\n    this.houseForm = _formbuilder.group({\n      title: ['', Validators.required],\n      location: [''],\n      pricePerNight: [0, Validators.required],\n      bedrooms: [0, Validators.required],\n      bathrooms: [0, Validators.required],\n      description: [''],\n      houseImageUrl: [''],\n      bedroomImageUrl: [''],\n      bathroomImageUrl: ['']\n    });\n  }\n\n  onSubmit() {\n    console.log(\"HouseCreate form submitted:\");\n    console.log(this.houseForm);\n    const newHouse = this.houseForm.value;\n    if (this.isEditMode) {\n      this._houseService.updateHouse(this.houseId, newHouse)\n        .subscribe(response => {\n          if (response.success) {\n            console.log(response.message);\n            this._router.navigate(['/houses']);\n          } else {\n            console.log('House update failed');\n          }\n        });\n    } else {\n      this._houseService.createHouse(newHouse)\n        .subscribe(response => {\n          if (response.success) {\n            console.log(response.message);\n            this._router.navigate(['/houses']);\n          }\n          else {\n            console.log('House creation failed');\n          }\n        });\n    }\n  }\n\n  backToHouses() {\n    this._router.navigate(['/houses']);\n  }\n\n  ngOnInit(): void {\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false; // Create mode\n      } else if (params['mode'] === 'edit') {\n        this.isEditMode = true; // Edit mode\n        this.houseId = +params['id']; // Convert to number\n        this.loadHouseForEdit(this.houseId);\n      }\n    });\n  }\n\n  loadHouseForEdit(houseId: number) {\n    this._houseService.getHouseById(houseId)\n      .subscribe(\n        (house: any) => {\n          console.log('retrieved house: ', house);\n          this.houseForm.patchValue({\n            title: house.Title,\n            location: house.Location,\n            pricePerNight: house.PricePerNight,\n            bedrooms: house.Bedrooms,\n            bathrooms: house.Bathrooms,\n            description: house.Description,\n            houseImageUrl: house.HouseImageUrl,\n            bedroomImageUrl: house.BedroomImageUrl,\n            bathroomImageUrl: house.BathroomImageUrl\n          });\n        }, (error: any) => {\n          console.error('Error loading house for edit:', error);\n        }\n      );\n  }\n}\n\n","<h2>{{ isEditMode ? 'Update' : 'Create'}} House</h2>\n\n<form [formGroup]=\"houseForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"title\">Title:</label>\n    <input type=\"text\" id=\"title\" formControlName=\"title\" class=\"form-control\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"location\">Location:</label>\n    <input type=\"text\" id=\"location\" formControlName=\"location\" class=\"form-control\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"pricePerNight\">Price per night:</label>\n    <input type=\"number\" id=\"pricePerNight\" formControlName=\"pricePerNight\" class=\"form-control\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"bedrooms\">Bedrooms:</label>\n    <input type=\"number\" id=\"bedrooms\" formControlName=\"bedrooms\" class=\"form-control\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"bathrooms\">Bathrooms:</label>\n    <input type=\"number\" id=\"bathrooms\" formControlName=\"bathrooms\" class=\"form-control\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"description\">Description:</label>\n    <textarea id=\"description\" formControlName=\"description\" class=\"form-control\"></textarea>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"houseImageUrl\">House Image URL:</label>\n    <input type=\"text\" id=\"houseImageUrl\" formControlName=\"houseImageUrl\" class=\"form-control\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"bedroomImageUrl\">Bedroom Image URL:</label>\n    <input type=\"text\" id=\"bedroomImageUrl\" formControlName=\"bedroomImageUrl\" class=\"form-control\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"bathroomImageUrl\">Bathroom Image URL:</label>\n    <input type=\"text\" id=\"bathroomImageUrl\" formControlName=\"bathroomImageUrl\" class=\"form-control\" />\n  </div>\n  <button class='btn btn-primary' type=\"submit\" [disabled]=\"houseForm.invalid\">\n    {{ isEditMode ? 'Update' : 'Create'}} House\n  </button>\n  <button class='btn btn-secondary' (click)=\"backToHouses()\">Cancel</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}