{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./reservations.service\";\nimport * as i4 from \"../houses/houses.service\";\nimport * as i5 from \"@angular/common\";\nfunction ReservationformComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const house_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", house_r1.HouseId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(house_r1.Title);\n  }\n}\nexport class ReservationformComponent {\n  constructor(_formbuilder, _router, _route, _reservationService, _houseService) {\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._route = _route;\n    this._reservationService = _reservationService;\n    this._houseService = _houseService;\n    this.isEditMode = false;\n    this.reservationId = -1;\n    this.houses = [];\n    this.houseSelectList = this.houses;\n    this.reservationForm = _formbuilder.group({\n      houseId: ['', Validators.required],\n      checkInDate: [new Date(), Validators.required],\n      checkOutDate: [new Date(), Validators.required]\n    });\n  }\n  getHouses() {\n    this._houseService.getHouses().subscribe(data => {\n      console.log('All', JSON.stringify(data));\n      this.houseSelectList = data;\n    });\n  }\n  onSubmit() {\n    console.log(\"ReservationCreate form submitted:\");\n    console.log(this.reservationForm);\n    const newReservation = this.reservationForm.value;\n    if (this.isEditMode) {\n      this._reservationService.updateReservation(this.reservationId, newReservation).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/reservations']);\n        } else {\n          console.log('Reservation update failed');\n        }\n      });\n    } else {\n      this._reservationService.createReservation(newReservation).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/reservations']);\n        } else {\n          console.log('Reservation creation failed');\n        }\n      });\n    }\n  }\n  backToReservations() {\n    this._router.navigate(['/reservations']);\n  }\n  ngOnInit() {\n    this.getHouses();\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false; // Create mode\n      } else if (params['mode'] === 'edit') {\n        this.isEditMode = true; // Edit mode\n        this.reservationId = +params['id']; // Convert to number\n        this.loadReservationForEdit(this.reservationId);\n      }\n    });\n  }\n  loadReservationForEdit(reservationId) {\n    this._reservationService.getReservationById(reservationId).subscribe(reservation => {\n      console.log('retrieved reservation: ', reservation);\n      this.reservationForm.patchValue({\n        houseId: reservation.HouseId,\n        checkInDate: new Date(reservation.CheckInDate),\n        checkOutDate: new Date(reservation.CheckOutDate)\n      });\n    }, error => {\n      console.error('Error loading reservation for edit:', error);\n    });\n  }\n}\nReservationformComponent.ɵfac = function ReservationformComponent_Factory(t) {\n  return new (t || ReservationformComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ReservationService), i0.ɵɵdirectiveInject(i4.HouseService));\n};\nReservationformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReservationformComponent,\n  selectors: [[\"app-reservations-reservationform\"]],\n  decls: 24,\n  vars: 5,\n  consts: [[1, \"p-4\", \"shadow-sm\", 2, \"border-radius\", \"15px\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"row\"], [1, \"form-floating\", \"col-md-4\", \"mb-3\", \"gx-1\"], [\"formControlName\", \"houseId\", 1, \"form-select\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"houseId\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"checkInDate\", \"formControlName\", \"checkInDate\", 1, \"form-control\"], [\"for\", \"checkInDate\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"checkOutDate\", \"formControlName\", \"checkOutDate\", 1, \"form-control\"], [\"for\", \"checkOutDate\", 1, \"form-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"rounded-pill\", 3, \"disabled\"], [1, \"btn\", \"btn-secondary\", \"rounded-pill\", \"mx-3\", 3, \"click\"], [3, \"value\"]],\n  template: function ReservationformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function ReservationformComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"select\", 4)(7, \"option\", 5);\n      i0.ɵɵtext(8, \"Select a house...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, ReservationformComponent_option_9_Template, 2, 2, \"option\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\", 7);\n      i0.ɵɵtext(11, \"HouseId:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 3);\n      i0.ɵɵelement(13, \"input\", 8);\n      i0.ɵɵelementStart(14, \"label\", 9);\n      i0.ɵɵtext(15, \"Check In Date:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 3);\n      i0.ɵɵelement(17, \"input\", 10);\n      i0.ɵɵelementStart(18, \"label\", 11);\n      i0.ɵɵtext(19, \"Check Out Date:\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"button\", 12);\n      i0.ɵɵtext(21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function ReservationformComponent_Template_button_click_22_listener() {\n        return ctx.backToReservations();\n      });\n      i0.ɵɵtext(23, \"Cancel\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Create\", \" Reservation\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.reservationForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.houseSelectList);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"disabled\", ctx.reservationForm.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Update\" : \"Create\", \" Reservation \");\n    }\n  },\n  dependencies: [i5.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAA0C,gBAAgB;;;;;;;;;ICQjFC,kCAAsE;IAAAA,YAAiB;IAAAA,iBAAS;;;;IAAlDA,wCAAuB;IAACA,eAAiB;IAAjBA,oCAAiB;;;ADE3G,OAAM,MAAOC,wBAAwB;EAMnCC,YACUC,YAAyB,EACzBC,OAAe,EACfC,MAAsB,EACtBC,mBAAuC,EACvCC,aAA2B;IAJ3B,iBAAY,GAAZJ,YAAY;IACZ,YAAO,GAAPC,OAAO;IACP,WAAM,GAANC,MAAM;IACN,wBAAmB,GAAnBC,mBAAmB;IACnB,kBAAa,GAAbC,aAAa;IATvB,eAAU,GAAY,KAAK;IAC3B,kBAAa,GAAW,CAAC,CAAC;IAC1B,WAAM,GAAa,EAAE;IAyBrB,oBAAe,GAAa,IAAI,CAACC,MAAM;IAhBrC,IAAI,CAACC,eAAe,GAAGN,YAAY,CAACO,KAAK,CAAC;MACxCC,OAAO,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACa,QAAQ,CAAC;MAClCC,WAAW,EAAE,CAAC,IAAIC,IAAI,EAAE,EAAEf,UAAU,CAACa,QAAQ,CAAC;MAC9CG,YAAY,EAAE,CAAC,IAAID,IAAI,EAAE,EAAEf,UAAU,CAACa,QAAQ;KAC/C,CAAC;EACJ;EAEAI,SAAS;IACP,IAAI,CAACT,aAAa,CAACS,SAAS,EAAE,CAC3BC,SAAS,CAACC,IAAI,IAAG;MAChBC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;MACxC,IAAI,CAACK,eAAe,GAAGL,IAAI;IAC7B,CAAC,CACA;EACL;EAIAM,QAAQ;IACNL,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAChDD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,eAAe,CAAC;IACjC,MAAMgB,cAAc,GAAG,IAAI,CAAChB,eAAe,CAACiB,KAAK;IACjD,IAAI,IAAI,CAACC,UAAU,EAAE;MACnB,IAAI,CAACrB,mBAAmB,CAACsB,iBAAiB,CAAC,IAAI,CAACC,aAAa,EAAEJ,cAAc,CAAC,CAC3ER,SAAS,CAACa,QAAQ,IAAG;QACpB,IAAIA,QAAQ,CAACC,OAAO,EAAE;UACpBZ,OAAO,CAACC,GAAG,CAACU,QAAQ,CAACE,OAAO,CAAC;UAC7B,IAAI,CAAC5B,OAAO,CAAC6B,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;SACzC,MAAM;UACLd,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;;MAE5C,CAAC,CAAC;KACL,MAAM;MACL,IAAI,CAACd,mBAAmB,CAAC4B,iBAAiB,CAACT,cAAc,CAAC,CACvDR,SAAS,CAACa,QAAQ,IAAG;QACpB,IAAIA,QAAQ,CAACC,OAAO,EAAE;UACpBZ,OAAO,CAACC,GAAG,CAACU,QAAQ,CAACE,OAAO,CAAC;UAC7B,IAAI,CAAC5B,OAAO,CAAC6B,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;SACzC,MACI;UACHd,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;;MAE9C,CAAC,CAAC;;EAER;EAEAe,kBAAkB;IAChB,IAAI,CAAC/B,OAAO,CAAC6B,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;EAC1C;EAEAG,QAAQ;IACN,IAAI,CAACpB,SAAS,EAAE;IAChB,IAAI,CAACX,MAAM,CAACgC,MAAM,CAACpB,SAAS,CAACoB,MAAM,IAAG;MACpC,IAAIA,MAAM,CAAC,MAAM,CAAC,KAAK,QAAQ,EAAE;QAC/B,IAAI,CAACV,UAAU,GAAG,KAAK,CAAC,CAAC;OAC1B,MAAM,IAAIU,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;QACpC,IAAI,CAACV,UAAU,GAAG,IAAI,CAAC,CAAC;QACxB,IAAI,CAACE,aAAa,GAAG,CAACQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACpC,IAAI,CAACC,sBAAsB,CAAC,IAAI,CAACT,aAAa,CAAC;;IAEnD,CAAC,CAAC;EACJ;EAEAS,sBAAsB,CAACT,aAAqB;IAC1C,IAAI,CAACvB,mBAAmB,CAACiC,kBAAkB,CAACV,aAAa,CAAC,CACvDZ,SAAS,CACPuB,WAAgB,IAAI;MACnBrB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEoB,WAAW,CAAC;MACnD,IAAI,CAAC/B,eAAe,CAACgC,UAAU,CAAC;QAC9B9B,OAAO,EAAE6B,WAAW,CAACE,OAAO;QAC5B7B,WAAW,EAAE,IAAIC,IAAI,CAAC0B,WAAW,CAACG,WAAW,CAAC;QAC9C5B,YAAY,EAAE,IAAID,IAAI,CAAC0B,WAAW,CAACI,YAAY;OAChD,CAAC;IACJ,CAAC,EAAGC,KAAU,IAAI;MAChB1B,OAAO,CAAC0B,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC7D,CAAC,CACF;EACL;;AA1FW5C,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAA6C;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXrClD,8BAAuD;MAE/CA,YAAiD;MAAAA,iBAAK;MAE1DA,+BAA4D;MAAtDA;QAAA,OAAYmD,cAAU;MAAA,EAAC;MACzBnD,8BAA4B;MAGCA,iCAAiB;MAAAA,iBAAS;MAC3CA,+EAAgG;MACpGA,iBAAS;MACTA,iCAAwC;MAAAA,yBAAQ;MAAAA,iBAAQ;MAE5DA,+BAA8C;MAC1CA,4BAAyF;MACzFA,iCAA4C;MAAAA,+BAAc;MAAAA,iBAAQ;MAEtEA,+BAA8C;MAC1CA,6BAA2F;MAC3FA,kCAA6C;MAAAA,gCAAe;MAAAA,iBAAQ;MAG5EA,mCAAgG;MAC5FA,aACJ;MAAAA,iBAAS;MACTA,mCAAmF;MAA/BA;QAAA,OAASmD,wBAAoB;MAAA,EAAC;MAACnD,uBAAM;MAAAA,iBAAS;;;MAvBlGA,eAAiD;MAAjDA,+EAAiD;MAEvBA,eAA6B;MAA7BA,+CAA6B;MAKjBA,eAAkB;MAAlBA,6CAAkB;MAaGA,gBAAoC;MAApCA,sDAAoC;MAC3FA,eACJ;MADIA,iFACJ","names":["Validators","i0","ReservationformComponent","constructor","_formbuilder","_router","_route","_reservationService","_houseService","houses","reservationForm","group","houseId","required","checkInDate","Date","checkOutDate","getHouses","subscribe","data","console","log","JSON","stringify","houseSelectList","onSubmit","newReservation","value","isEditMode","updateReservation","reservationId","response","success","message","navigate","createReservation","backToReservations","ngOnInit","params","loadReservationForEdit","getReservationById","reservation","patchValue","HouseId","CheckInDate","CheckOutDate","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/teresapham/Projects/Group-Project-2/Group-Project-2/ClientApp/src/app/reservations/reservationform.component.ts","/Users/teresapham/Projects/Group-Project-2/Group-Project-2/ClientApp/src/app/reservations/reservationform.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ReservationService } from './reservations.service';\nimport { HouseService } from '../houses/houses.service';\nimport { IHouse } from '../houses/house';\n\n@Component({\n  selector: \"app-reservations-reservationform\",\n  templateUrl: \"./reservationform.component.html\"\n})\nexport class ReservationformComponent {\n  reservationForm: FormGroup;\n  isEditMode: boolean = false;\n  reservationId: number = -1;\n  houses: IHouse[] = [];\n\n  constructor(\n    private _formbuilder: FormBuilder,\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _reservationService: ReservationService,\n    private _houseService: HouseService\n  ) {\n    this.reservationForm = _formbuilder.group({\n      houseId: ['', Validators.required],\n      checkInDate: [new Date(), Validators.required],\n      checkOutDate: [new Date(), Validators.required],\n    });\n  }\n\n  getHouses(): void {\n    this._houseService.getHouses()\n      .subscribe(data => {\n        console.log('All', JSON.stringify(data));\n        this.houseSelectList = data;\n      }\n      );\n  }\n\n  houseSelectList: IHouse[] = this.houses;\n\n  onSubmit() {\n    console.log(\"ReservationCreate form submitted:\");\n    console.log(this.reservationForm);\n    const newReservation = this.reservationForm.value;\n    if (this.isEditMode) {\n      this._reservationService.updateReservation(this.reservationId, newReservation)\n        .subscribe(response => {\n          if (response.success) {\n            console.log(response.message);\n            this._router.navigate(['/reservations']);\n          } else {\n            console.log('Reservation update failed');\n          }\n        });\n    } else {\n      this._reservationService.createReservation(newReservation)\n        .subscribe(response => {\n          if (response.success) {\n            console.log(response.message);\n            this._router.navigate(['/reservations']);\n          }\n          else {\n            console.log('Reservation creation failed');\n          }\n        });\n    }\n  }\n\n  backToReservations() {\n    this._router.navigate(['/reservations']);\n  }\n\n  ngOnInit(): void {\n    this.getHouses();\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false; // Create mode\n      } else if (params['mode'] === 'edit') {\n        this.isEditMode = true; // Edit mode\n        this.reservationId = +params['id']; // Convert to number\n        this.loadReservationForEdit(this.reservationId);\n      }\n    });\n  }\n\n  loadReservationForEdit(reservationId: number) {\n    this._reservationService.getReservationById(reservationId)\n      .subscribe(\n        (reservation: any) => {\n          console.log('retrieved reservation: ', reservation);\n          this.reservationForm.patchValue({\n            houseId: reservation.HouseId,\n            checkInDate: new Date(reservation.CheckInDate),\n            checkOutDate: new Date(reservation.CheckOutDate),\n          });\n        }, (error: any) => {\n          console.error('Error loading reservation for edit:', error);\n        }\n      );\n  }\n}\n\n","<div class=\"p-4 shadow-sm\" style=\"border-radius: 15px\">\n\n    <h2>{{ isEditMode ? 'Update' : 'Create'}} Reservation</h2>\n\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"reservationForm\">\n        <div class=\"form-group row\">\n            <div class=\"form-floating col-md-4 mb-3 gx-1\">\n                <select formControlName=\"houseId\" class=\"form-select\">\n                    <option value=\"\">Select a house...</option>\n                    <option *ngFor=\"let house of houseSelectList\" [value]=\"house.HouseId\">{{ house.Title }}</option>\n                </select>\n                <label for=\"houseId\" class=\"form-label\">HouseId:</label>\n            </div>\n            <div class=\"form-floating col-md-4 mb-3 gx-1\">\n                <input type=\"date\" id=\"checkInDate\" formControlName=\"checkInDate\" class=\"form-control\" />\n                <label for=\"checkInDate\" class=\"form-label\">Check In Date:</label>\n            </div>\n            <div class=\"form-floating col-md-4 mb-3 gx-1\">\n                <input type=\"date\" id=\"checkOutDate\" formControlName=\"checkOutDate\" class=\"form-control\" />\n                <label for=\"checkOutDate\" class=\"form-label\">Check Out Date:</label>\n            </div>\n        </div>\n        <button class='btn btn-primary rounded-pill' type=\"submit\" [disabled]=\"reservationForm.invalid\">\n            {{ isEditMode ? 'Update' : 'Create'}} Reservation\n        </button>\n        <button class='btn btn-secondary rounded-pill mx-3' (click)=\"backToReservations()\">Cancel</button>\n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}