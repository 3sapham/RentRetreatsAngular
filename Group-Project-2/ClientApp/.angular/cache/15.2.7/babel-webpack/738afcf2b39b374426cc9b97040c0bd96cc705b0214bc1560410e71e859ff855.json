{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ReservationService {\n  constructor(_http) {\n    this._http = _http;\n    this.baseUrl = 'api/reservation/';\n  }\n  getReservations() {\n    return this._http.get(this.baseUrl);\n  }\n  createReservation(newReservation) {\n    const createUrl = 'api/reservation/create';\n    return this._http.post(createUrl, newReservation);\n  }\n  getReservationById(reservationId) {\n    const url = `${this.baseUrl}/${reservationId}`;\n    return this._http.get(url);\n  }\n  updateReservation(reservationId, newReservation) {\n    const url = `${this.baseUrl}/update/${reservationId}`;\n    newReservation.reservationId = reservationId;\n    return this._http.put(url, newReservation);\n  }\n  deleteReservation(reservationId) {\n    const url = `${this.baseUrl}/${reservationId}`;\n    return this._http.delete(url);\n  }\n}\nReservationService.ɵfac = function ReservationService_Factory(t) {\n  return new (t || ReservationService)(i0.ɵɵinject(i1.HttpClient));\n};\nReservationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ReservationService,\n  factory: ReservationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAI7BC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAFjB,YAAO,GAAG,kBAAkB;EAEK;EAEzCC,eAAe;IACb,OAAO,IAAI,CAACD,KAAK,CAACE,GAAG,CAAiB,IAAI,CAACC,OAAO,CAAC;EACrD;EAEAC,iBAAiB,CAACC,cAA4B;IAC5C,MAAMC,SAAS,GAAG,wBAAwB;IAC1C,OAAO,IAAI,CAACN,KAAK,CAACO,IAAI,CAAMD,SAAS,EAAED,cAAc,CAAC;EACxD;EAEAG,kBAAkB,CAACC,aAAqB;IACtC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,IAAIM,aAAa,EAAE;IAC9C,OAAO,IAAI,CAACT,KAAK,CAACE,GAAG,CAACQ,GAAG,CAAC;EAC5B;EAEAC,iBAAiB,CAACF,aAAqB,EAAEJ,cAAmB;IAC1D,MAAMK,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,WAAWM,aAAa,EAAE;IACrDJ,cAAc,CAACI,aAAa,GAAGA,aAAa;IAC5C,OAAO,IAAI,CAACT,KAAK,CAACY,GAAG,CAAMF,GAAG,EAAEL,cAAc,CAAC;EACjD;EAEAQ,iBAAiB,CAACJ,aAAqB;IACrC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,IAAIM,aAAa,EAAE;IAC9C,OAAO,IAAI,CAACT,KAAK,CAACc,MAAM,CAACJ,GAAG,CAAC;EAC/B;;AA7BWZ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAiB,SAAlBjB,kBAAkB;EAAAkB,YAFjB;AAAM","names":["ReservationService","constructor","_http","getReservations","get","baseUrl","createReservation","newReservation","createUrl","post","getReservationById","reservationId","url","updateReservation","put","deleteReservation","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/teresapham/Projects/Group-Project-2/Group-Project-2/ClientApp/src/app/reservations/reservations.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IReservation } from './reservation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReservationService {\n\n  private baseUrl = 'api/reservation/';\n\n  constructor(private _http: HttpClient) { }\n\n  getReservations(): Observable<IReservation[]> {\n    return this._http.get<IReservation[]>(this.baseUrl);\n  }\n\n  createReservation(newReservation: IReservation): Observable<any> {\n    const createUrl = 'api/reservation/create';\n    return this._http.post<any>(createUrl, newReservation);\n  }\n\n  getReservationById(reservationId: number): Observable<any> {\n    const url = `${this.baseUrl}/${reservationId}`;\n    return this._http.get(url);\n  }\n\n  updateReservation(reservationId: number, newReservation: any): Observable<any> {\n    const url = `${this.baseUrl}/update/${reservationId}`;\n    newReservation.reservationId = reservationId;\n    return this._http.put<any>(url, newReservation);\n  }\n\n  deleteReservation(reservationId: number): Observable<any> {\n    const url = `${this.baseUrl}/${reservationId}`;\n    return this._http.delete(url);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}