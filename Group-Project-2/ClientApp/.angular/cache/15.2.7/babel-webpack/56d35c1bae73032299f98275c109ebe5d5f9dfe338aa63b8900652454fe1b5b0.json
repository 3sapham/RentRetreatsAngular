{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuardService {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const token = localStorage.getItem(\"userEmail\");\n    if (token) {\n      return true;\n    } else {\n      this.router.navigate(['/register']);\n      return false;\n    }\n  }\n}\nAuthGuardService.ɵfac = function AuthGuardService_Factory(t) {\n  return new (t || AuthGuardService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuardService,\n  factory: AuthGuardService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAY;EAExEC,WAAW,CAACC,KAA6B,EAAEC,KAA0B;IACnE,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAGF,KAAK,EAAE;MACR,OAAO,IAAI;KACZ,MACI;MACH,IAAI,CAACJ,MAAM,CAACO,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;MACnC,OAAO,KAAK;;EAEhB;;AAbWV,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAW,SAAhBX,gBAAgB;EAAAY,YAFf;AAAM","names":["AuthGuardService","constructor","authService","router","canActivate","route","state","token","localStorage","getItem","navigate","factory","providedIn"],"sourceRoot":"","sources":["/Users/teresapham/Projects/Group-Project-2/Group-Project-2/ClientApp/src/app/authentication/authguard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n  \n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    const token = localStorage.getItem(\"userEmail\");\n    if(token) {\n      return true;\n    }\n    else {\n      this.router.navigate(['/register']);\n      return false;\n    }\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}